---
title: "Crafting Stellar Blogs: A Quarto and GitHub Pages Guide by Oppenheimer and Skywalker"
author: 
    - "Mohit Nair"
    - "Suchit G"
date: "2023-10-26"
categories:
- Resources
---

<h2>A Quarto and GitHub Pages Guide for the noob bloggers</h2>

![](thumbnail.jpg)

This article serves as a compilation of online resources for Git, GitHub and Quarto, in order to inform readers eager to enter the world of blogging using GitHub pages. 
<h3>Git and Github</h3>
To get started with Git and GitHub, the following resources are recommended:
<ol>
<li><a href = "https://www.theodinproject.com/lessons/foundations-introduction-to-git">The Odin Project - Introduction to Git</a></li>
<li><a href = "https://www.theodinproject.com/lessons/foundations-git-basics">The Odin Project - Foundations in Git</a></li>
<li><a href = "https://www.theodinproject.com/lessons/foundations-commit-messages">The Odin Project - Commit messages</a></li>
</ol>

To configure ssh (Secure Shell, a newly adopted path for authentication by Github and Git) follow the following steps.
<li><b>Step 1: </b>Make sure Git is installed into your system (along with Git bash if you are on Windows)</li>
<li><b>Step 2: </b>Configure your Git</li>
```
git config --global user.name (Your Name)
git config --global user.email (you@example.com)
```
![](1.png)

Click on the green Code button, select SSH if not already selected, and copy the address displayed there.

Run the command: 
```
git clone (Paste what you copied)
```
Getting a warning with: “The authenticity of host ‘github.com’ can’t be established.” should not worry you. If this is the first time you connect to this server, you will get this warning. Select “yes” and it won’t bother you again.



<li><b>Step 3: </b>Generating an SSH key
We will be using a tool called ssh-keygen. So open a terminal and run this command:
```
ssh-keygen
```
First, you will be asked about the location where the keys should be stored. By default, your user folder will contain a folder called .ssh. Leave it as it is and hit the Enter key.
Next, you will be asked to set a password to protect your private key. Without a password, anyone obtaining your private key can impersonate you.
You now have two files called id_rsa and id_rsa.pub which are your private and public keys respectively (for encryption).
Open your public key (id_rsa.pub) from the directory you saved it in and copy the entire content of the files.

<li><b>Step 4: </b>Connecting your Git to your GitHub using SSH
Click on your profile on the top right corner of your GitHub home page.






![](2.png)








Go to settings > SSH and GPG keys.
Click on 'New SSH key' and paste the copied content into the large text box. Name your key.

<li><b>Step 5: </b></li>Clone your GitHub repository using the command used previously
Step 6 — Cloning a GitHub repository (again)

Now it is time to rerun the clone command, and it should work.

Now Git is integrated with any tools or code editors that you may be using. You can push and pull changes from GitHub without issues.
```
git clone (SSH link copied from code of your GitHub repo as done in Step 2)
```
This should work as intended.




<h3>Quarto</h3>
To get started with Quarto, the following link is recommended: <a href = "https://quarto.org/docs/get-started/">Getting Started with Quarto</a>.
Moreover, the documentation in Quarto is fairly simple and easy to understand. So please use the documentation when you face any kind of problem.
Refer to this link to completely learn how authoring in Quarto works: <a href = "https://quarto.org/docs/get-started/authoring/vscode.html">Authoring in Quarto</a>. For a complete view of their documentation, please visit: <a href = "https://quarto.org/docs/guide/">Quarto Documentation</a>



